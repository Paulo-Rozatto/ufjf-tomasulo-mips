{"mappings":"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","sources":["src/interface-handlers.js","src/translator.js","src/components.js"],"sourcesContent":["import { binToAssembly } from \"./translator\";\nimport { ADD_RS, MUL_RS } from \"./components\";\n\nconst instructions = document.querySelector(\"#instructions-list\");\nconst memory = document.querySelector(\"#memory-list\");\nconst registers = document.querySelector(\"#registers-list\");\nconst storeBuffer = document.querySelector(\"#store-buffer-list\");\nconst loadBuffer = document.querySelector(\"#load-buffer-list\");\nconst rsAdd = document.querySelector(\"#rs-fadd\");\nconst rsMult = document.querySelector(\"#rs-fmult\");\nconst adder = document.querySelector(\"#adder\");\nconst pc = document.querySelector(\"#pc\");\nconst clock = document.querySelector(\"#clock\");\nconst output = document.querySelector(\"#output\");\n\nconst activeList = new Set();\n\nfunction newSingleCell(id, instruction) {\n    const li = document.createElement(\"li\");\n    li.id = id;\n    li.classList = \"list-group-item text-center\";\n    li.innerText = instruction;\n    li.title = binToAssembly(instruction);\n    return li;\n}\n\nfunction newDoubleCell(id, val1, val2) {\n    const li = document.createElement(\"li\");\n    li.id = id;\n    li.classList.add(\"list-group-item\");\n    li.innerHTML = `\n    <strong class=\"float-start\">${val1}:</strong>\n    <span class=\"float-end\">${val2}</span>`;\n    return li;\n}\n\nfunction newStationCell(id) {\n    const li = document.createElement(\"li\");\n    li.classList = \"list-group-item d-inline-flex justify-content-between\";\n    li.id = id;\n    li.innerHTML = `\n    <strong title=\"status\">free</strong>\n    <span title=\"command\">oooo</span>\n    <span title=\"Vj\">0.00</span>\n    <span title=\"Vk\">0.00</span>\n    <span title=\"Qj\">0.00</span>\n    <span title=\"Qk\">0.00</span>`;\n    return li;\n}\n\nexport function init() {\n    instructions.innerHTML = \"\";\n    memory.innerHTML = \"\";\n    registers.innerHTML = \"\";\n    storeBuffer.innerHTML = \"\";\n    loadBuffer.innerHTML = \"\";\n    rsAdd.innerHTML = \"\";\n    rsMult.innerHTML = \"\";\n\n    pc.innerText = \"00\";\n    clock.innerText = \"00\";\n\n    const zero32 = \"0\".repeat(32);\n    const address = (i) => \"0x\" + (i * 8).toString(16).padStart(3, \"0\");\n    const reg = (i) => \"$\" + i.toString(10).padStart(2, \"0\");\n\n    for (let i = 0; i < 64; i++) {\n        const li = newDoubleCell(`mem-${i}`, address(i), zero32);\n        memory.appendChild(li);\n    }\n\n    for (let i = 0; i < 32; i++) {\n        const li = newDoubleCell(`reg-${i}`, reg(i), zero32);\n        registers.appendChild(li);\n    }\n\n    for (let i = 1; i <= 3; i++) {\n        const li = newStationCell(`rs-${i}`);\n        rsAdd.appendChild(li);\n    }\n\n    for (let i = 4; i <= 5; i++) {\n        const li = newStationCell(`rs-${i}`);\n        rsMult.appendChild(li);\n    }\n\n    for (let i = 6; i <= 9; i++) {\n        const li = newSingleCell(`fld-${i}`, zero32);\n        loadBuffer.appendChild(li);\n    }\n\n    for (let i = 10; i <= 14; i++) {\n        const li = newDoubleCell(`fsd-${i}`, address(0), zero32);\n        storeBuffer.appendChild(li);\n    }\n\n    for (let i = 1; i <= 3; i++) {\n        const li = newSingleCell(`ins-${i}`, zero32);\n        instructions.appendChild(li);\n    }\n}\n\nfunction setActive(li, offset = -1) {\n    li.classList.add(\"active\");\n    if (offset < 0) {\n        offset = li.id.split(\"-\")[1]\n        offset = parseInt(offset) - 1;\n    };\n    li.parentElement.scrollTo({ top: li.clientHeight * offset, behavior: \"smooth\" })\n    activeList.add(li);\n}\n\nexport function clearActive() {\n    activeList.forEach(li => li.classList.remove(\"active\"));\n    activeList.clear();\n}\n\nexport function setInstructions(commands) {\n    const fragment = document.createDocumentFragment();\n    instructions.innerHTML = \"\";\n    for (let i = 0; i < commands.length; i++) {\n        const instruction = commands[i];\n        const id = `ins-${i + 1}`;\n        const li = newSingleCell(id, instruction);\n        fragment.appendChild(li);\n    }\n    instructions.appendChild(fragment);\n}\n\nfunction updateLoadBuffer(station) {\n    const id = `fld-${station.id}`;\n    const li = document.getElementById(id);\n    li.innerText = station.vk.toString(2).padStart(32, \"0\");\n    setActive(li);\n}\n\nfunction updateStoreBuffer(station) {\n    const id = `fsd-${station.id}`;\n    const li = document.getElementById(id);\n    li.children[0].innerText = \"0x\" + station.vk.toString(16).padStart(3, \"0\");\n    li.children[1].innerText = station.vj.toString(2).padStart(32, \"0\");\n    li.children[1].title = station.vj.toFixed(2);\n    setActive(li, station.id - 10);\n}\n\nfunction updateStation(station) {\n    if (station.opName === 'fld') {\n        updateLoadBuffer(station);\n        return;\n    }\n\n    if (station.opName === 'fsd') {\n        updateStoreBuffer(station);\n        return;\n    }\n\n    const id = `rs-${station.id}`;\n    const rs = document.getElementById(id);\n    rs.innerHTML = `\n    <strong title=\"status\">${station.busy ? \"busy\" : \"free\"}</strong>\n    <span title=\"command\">${station.opName}</span>\n    <span title=\"Vj\">${station.vj.toFixed(2)}</span>\n    <span title=\"Vk\">${station.vk.toFixed(2)}</span>\n    <span title=\"Qj\">${station.qj.toFixed(2)}</span>\n    <span title=\"Qk\">${station.qk.toFixed(2)}</span>`;\n    setActive(rs);\n}\n\nfunction updateAdder(_adder) {\n    if (!_adder.station) return;\n\n    const rsId = `rs#${_adder.station.id}`;\n    const cycles = _adder.station.cicles.toString().padStart(2, \"0\");\n    adder.innerHTML = `\n    <strong title=\"status\">${_adder.busy ? \"busy\" : \"free\"}</strong>\n    <span title=\"id da station\">${rsId}</span>\n    <span title=\"Vk\">${cycles} cycles</span>`;\n    setActive(adder);\n}\n\nfunction updateMultiplier(_multiplier) {\n    if (!_multiplier.station) return;\n\n    const rsId = `rs#${_multiplier.station.id}`;\n    const cycles = _multiplier.station.cicles.toString().padStart(2, \"0\");\n    multiplier.innerHTML = `\n    <strong title=\"status\">${_multiplier.busy ? \"busy\" : \"free\"}</strong>\n    <span title=\"id da station\">${rsId}</span>\n    <span title=\"Vk\">${cycles} cycles</span>`;\n    setActive(multiplier);\n}\n\nexport function updateRegisters(registers) {\n    registers.forEach(reg => {\n        let { id, value } = reg;\n        const li = document.getElementById(`reg-${id}`);\n        li.title = value.toFixed(2);\n        li.lastElementChild.innerText = value.toString(2).slice(0, 31).padStart(32, \"0\") + \"...\";\n        setActive(li);\n    });\n}\n\nexport function updateMemory(address, value) {\n    const li = document.getElementById(`mem-${address}`);\n    li.title = value.toFixed(2);\n    li.lastElementChild.innerText = value.toString(2).slice(0, 31).padStart(32, \"0\") + \"...\";\n    setActive(li);\n}\n\n\nexport function issue(station, _pc, _clock) {\n    clock.innerText = _clock.get().toString().padStart(2, \"0\");\n    if (_pc) {\n        pc.innerText = _pc.get().toString().padStart(2, \"0\");\n        let insIdx = (_pc.get() >> 2) - 1;\n        setActive(instructions.children[insIdx])\n    }\n\n    if (station) {\n        updateStation(station);\n    }\n}\n\nexport function execute(adder, multiplier, station) {\n    if (adder) {\n        updateAdder(adder);\n    }\n\n    if (multiplier) {\n        updateMultiplier(multiplier);\n    }\n\n    if (station) {\n        updateStation(station);\n    }\n}\n\nexport function writeBack(stations, registers) {\n    stations.forEach(station => updateStation(station));\n    updateRegisters(registers);\n}\n\nexport function updateOutput(pc, clock, instruction, stations, registers, memory) {\n    const ins = instruction ? instruction.toString(2).padStart(32, \"0\") : \"-\";\n    const binary = instruction ? binToAssembly(ins) : \"-\";\n    const adds = stations[ADD_RS].map(rs => `- ${rs.id.toString().padStart(2, \"0\")}: ${rs.busy ? rs.opName : \"free\"}`).join(\"\\n\");\n    const mults = stations[MUL_RS].map(rs => `- ${rs.id.toString().padStart(2, \"0\")}: ${rs.busy ? rs.opName : \"free\"}`).join(\"\\n\");\n\n    const outText = `___________________________\n\nCiclo: ${clock.toString().padStart(2, \"0\")}\nPC: ${pc.toString().padStart(2, \"0\")}\nInstrução: ${ins}\nAssembly: ${binary}\nEstações de Adição:\n${adds}\nEstações de Multiplicação:\n${mults}\nRegistradores: \n${[...registers].map((r, i) => `- $${i.toString().padStart(2, \"0\")}: ${r.toFixed(2)}`).join(\"\\n\")}\nMemória:\n${[...memory].map((m, i) => `- 0x${(i * 8).toString(16).padStart(3, \"0\")}: ${m.toFixed(2)}`).join(\"\\n\")}\n\n`\n    let scrollHeight = output.scrollHeight;\n    output.value += outText;\n    if (clock > 0)\n        output.scrollTo({ top: scrollHeight, behavior: \"smooth\" })\n}\n\ninit();","import { operations, TYPES } from \"./components\";\n\nfunction regToBin(register, size = 5) {\n    let number = parseInt(register.replace(\"$\", \"\"));\n    return number.toString(2).padStart(size, \"0\");\n}\n\nexport function binToAssembly(instruction) {\n    instruction = parseInt(instruction, 2);\n    const opcode = instruction & 0b1111111; // [6-0]\n    const funct = (instruction >> 12) & 0b111 // [14-12]\n\n    if (opcode === 0) {\n        return \"nop\";\n    }\n\n    let op = operations[opcode];\n    const params = op.getParams(instruction);\n\n    switch (opcode) {\n        case TYPES.R:\n            op = op[funct];\n            return `${op.name} $${params.rd}, $${params.rs1}, $${params.rs2}`;\n        case TYPES.I:\n            return `${op.name} $${params.rd}, ${params.imm}($${params.rs1})`;\n        case TYPES.S:\n            return `${op.name} $${params.rs2}, ${params.imm}($${params.rs1})`;\n    }\n\n    if (opcode === TYPES.R) {\n        op = op[funct];\n        return `${op.name} $${params.rd}, $${params.rs1}, $${params.rs2}`;\n    }\n\n    return `${op.name} $${params.rd}, ${params.imm}($${params.rs1})`;\n}\n\nexport function assemblyToBin(assembly) {\n    const parts = assembly.split(/\\s|\\(/).map(e => e.replace(\",\", \"\"));\n    const command = parts[0];\n    parts.shift();\n\n    let binParts = parts.map(e => regToBin(e))\n\n    let opcode, funct, rs1, rs2, rd, imm;\n    switch (command) {\n        case 'fadd':\n            opcode = TYPES.R.toString(2).padStart(7,\"0\");\n            funct = \"001\";\n            rd = binParts[0];\n            rs1 = binParts[1];\n            rs2 = binParts[2];\n            return `0000000${rs2}${rs1}${funct}${rd}${opcode}`;\n        case 'fsub':\n            opcode = TYPES.R.toString(2).padStart(7,\"0\");\n            funct = \"010\";\n            rd = binParts[0];\n            rs1 = binParts[1];\n            rs2 = binParts[2];\n            return `0000000${rs2}${rs1}${funct}${rd}${opcode}`;\n        case 'fmul':\n            opcode = TYPES.R.toString(2).padStart(7,\"0\");\n            funct = \"011\";\n            rd = binParts[0];\n            rs1 = binParts[1];\n            rs2 = binParts[2];\n            return `0000000${rs2}${rs1}${funct}${rd}${opcode}`;\n        case 'fdiv':\n            opcode = TYPES.R.toString(2).padStart(7,\"0\");\n            funct = \"100\";\n            rd = binParts[0];\n            rs1 = binParts[1];\n            rs2 = binParts[2];\n            return `0000000${rs2}${rs1}${funct}${rd}${opcode}`;\n        case 'fld':\n            opcode = TYPES.I.toString(2).padStart(7,\"0\");\n            rs1 = binParts[2];\n            rd = binParts[0];\n            imm = binParts[1].toString(2).padStart(12,\"0\");\n            return `${imm}${rs1}000${rd}${opcode}`;\n        case 'fsd':\n            opcode = TYPES.S.toString(2).padStart(7,\"0\");\n            rs1 = binParts[2];\n            rs2 = binParts[0];\n            imm = binParts[1].padStart(12,\"0\");\n            return `${imm.slice(0,7)}${rs2}${rs1}000${imm.slice(7)}${opcode}`;\n    }\n\n    return \"whatf\"\n}","export const TYPES = {\n    R: 0b0000001,\n    I: 0b0000010,\n    S: 0b0000011,\n}\n\nexport const ADD_RS = 0b01;\nexport const MUL_RS = 0b00;\nexport const FLD_RS = 0b10;\nexport const FSD_RS = 0b11;\n\nexport const cdb = {\n    busy: false,\n    result: 0,\n    station: null,\n}\n\nexport const pc = {\n    value: 0,\n    next() {\n        this.value += 4;\n    },\n    reset() {\n        this.value = 0;\n    },\n    get() {\n        return this.value;\n    }\n}\n\nexport const clock = {\n    value: 0,\n    next() {\n        this.value += 1;\n    },\n    reset() {\n        this.value = 0;\n    },\n    get() {\n        return this.value;\n    }\n}\n\nexport const instructions = {\n    _data: [],\n    set(data) {\n        this._data = data;\n    },\n    get(byte) {\n        return this._data[byte / 4];\n    }\n}\n\nexport const operations = {\n    0b0000001: { // r type\n        0b001: {\n            name: 'fadd',\n            op: (rs1, rs2) => rs1 + rs2,\n            cicles: 1,\n            station: ADD_RS,\n        },\n        0b010: {\n            name: 'fsub',\n            op: (rs1, rs2) => rs1 - rs2,\n            cicles: 1,\n            station: ADD_RS,\n        },\n        0b011: {\n            name: 'fmul',\n            op: (rs1, rs2) => rs1 * rs2,\n            cicles: 10,\n            station: MUL_RS,\n        },\n        0b100: {\n            name: 'fdiv',\n            op: (rs1, rs2) => rs1 / rs2,\n            cicles: 40,\n            station: MUL_RS,\n        },\n        getParams: (instruction) => {\n            const rs1 = (instruction >> 15) & 0b11111;\n            const rs2 = (instruction >> 20) & 0b11111;\n            const rd = (instruction >> 7) & 0b11111;\n            return { rs1, rs2, rd };\n        }\n    },\n    0b0000010: { // i type\n        name: 'fld',\n        op: (rs1, imm, reg, mem) => mem[(reg[rs1] + imm) >> 3],\n        cicles: 1,\n        station: FLD_RS,\n        getParams: (instruction) => {\n            const rs1 = (instruction >> 15) & 0b11111;\n            const rd = (instruction >> 7) & 0b11111;\n            const imm = (instruction >> 20) & 0b111111111111;\n            return { rs1, rd, imm };\n        }\n    },\n    0b0000011: { // s type\n        name: 'fsd',\n        op: (rs1, imm, reg) => (reg[rs1] + imm),\n        cicles: 1,\n        station: FSD_RS,\n        getParams: (instruction) => {\n            const rs1 = (instruction >> 15) & 0b11111;\n            const rs2 = (instruction >> 20) & 0b11111;\n            const imm = ((instruction >> 7) & 0b11111) | ((instruction >> 20) & 0b11111111111100000);\n            return { rs1, rs2, imm };\n        }\n    }\n}\n\nconst station = {\n    id: 0,\n    busy: 0,\n    op: 0,\n    opName: \"\",\n    vj: 0,\n    vk: 0,\n    qj: 0,\n    qk: 0,\n    cicles: 0,\n}\n\nexport const stations = {\n    [ADD_RS]: [],\n    [MUL_RS]: [],\n    [FLD_RS]: [],\n    [FSD_RS]: [],\n}\n\nexport const resetStations = () => {\n    for(const stationg of Object.values(stations)) {\n        stationg.forEach(rs => {\n            rs.busy = false;\n            rs.vj = 0;\n            rs.vk = 0;\n            rs.qj = 0;\n            rs.qk = 0;\n            rs.cicles = 0;\n        });\n    }\n}\n\nfor (let i = 1; i <= 3; i++) {\n    let rs = { ...station };\n    rs.id = i;\n    rs.opName = \"fadd\";\n    stations[ADD_RS].push(rs);\n}\n\nfor (let i = 4; i <= 5; i++) {\n    let rs = { ...station };\n    rs.id = i;\n    rs.opName = \"fmul\";\n    stations[MUL_RS].push(rs);\n}\n\nfor (let i = 6; i <= 9; i++) {\n    let rs = { ...station };\n    rs.id = i;\n    rs.opName = \"fld\";\n    stations[FLD_RS].push(rs);\n}\n\nfor (let i = 10; i <= 14; i++) {\n    let rs = { ...station };\n    rs.id = i;\n    rs.opName = \"fsd\";\n    stations[FSD_RS].push(rs);\n}\n\nexport const adder = {\n    busy: false,\n    ready: false,\n    station: null,\n    result: 0\n}\n\nexport const multiplier = {\n    busy: false,\n    ready: false,\n    station: null,\n    result: 0\n}\n\nexport const loadStoreQueue = {\n    _data: new Array(9).fill(0),\n    _head: 0,\n    _tail: 0,\n    push(value) {\n        this._data[this._tail] = value;\n        this._tail = (this._tail + 1) % this._data.length;\n    },\n    pop() {\n        const value = this._data[this._head];\n        this._head = (this._head + 1) % this._data.length;\n        return value;\n    },\n    head() {\n        return this._data[this._head];\n    },\n    reset() {\n        this._data.fill(0);\n        this._head = 0;\n        this._tail = 0;\n    }\n}\n"],"names":["$5jcMS","parcelRequire","$533a7d8001faa933$var$instructions","document","querySelector","$533a7d8001faa933$var$memory","$533a7d8001faa933$var$registers","$533a7d8001faa933$var$storeBuffer","$533a7d8001faa933$var$loadBuffer","$533a7d8001faa933$var$rsAdd","$533a7d8001faa933$var$rsMult","$533a7d8001faa933$var$adder","$533a7d8001faa933$var$pc","$533a7d8001faa933$var$clock","$533a7d8001faa933$var$output","$533a7d8001faa933$var$activeList","Set","$533a7d8001faa933$var$newSingleCell","id","instruction","li","createElement","classList","innerText","title","binToAssembly","$533a7d8001faa933$var$newDoubleCell","val1","val2","add","innerHTML","$533a7d8001faa933$var$newStationCell","$533a7d8001faa933$export$2cd8252107eb640b","zero32","repeat","address","i","toString","padStart","reg","appendChild","$533a7d8001faa933$var$setActive","offset","split","parseInt","parentElement","scrollTo","top","clientHeight","behavior","$533a7d8001faa933$export$6b837c8aded2f5fd","forEach","remove","clear","$533a7d8001faa933$export$685c27954c6f3b2f","commands","fragment","createDocumentFragment","length","$533a7d8001faa933$var$updateStation","station","opName","getElementById","vk","$533a7d8001faa933$var$updateLoadBuffer","children","vj","toFixed","$533a7d8001faa933$var$updateStoreBuffer","rs","busy","qj","qk","$533a7d8001faa933$export$52c13b91f1b50195","registers","value","lastElementChild","slice","$533a7d8001faa933$export$85ff1b3aeb109cce","$533a7d8001faa933$export$69ad3503f98be476","_pc","_clock","get","insIdx","$533a7d8001faa933$export$51396ec711da548b","adder","multiplier1","_adder","rsId","cycles","cicles","$533a7d8001faa933$var$updateAdder","_multiplier","multiplier","$533a7d8001faa933$var$updateMultiplier","$533a7d8001faa933$export$166c2f9918d31b3a","stations","$533a7d8001faa933$export$4d9fd78bc1f02e24","pc","clock","memory","ins","binary","adds","$2FxLf","ADD_RS","map","join","mults","MUL_RS","outText","r","m","scrollHeight","$3dd8a564a6b0145b$export$af70ccb6067c62a1","opcode","funct","op","operations","params","getParams","TYPES","R","name","rd","rs1","rs2","I","imm","S","$3dd8a564a6b0145b$export$fca8b5f4adceb41f","assembly","parts","e","replace","command","shift","binParts","register","size","$3dd8a564a6b0145b$var$regToBin","$1f199959333bdd6e$export$426db7a6155b7a80","$1f199959333bdd6e$export$31c92904bc572b16","$1f199959333bdd6e$export$278b27a75368be21","$1f199959333bdd6e$export$e9ef64a03cbf0ffe","result","$1f199959333bdd6e$export$42889321af78fdd7","next","this","reset","$1f199959333bdd6e$export$8c9e255416017e56","$1f199959333bdd6e$export$21ba78b50397401d","_data","set","data","byte","$1f199959333bdd6e$export$59894c102379d64a","mem","$1f199959333bdd6e$var$station","$1f199959333bdd6e$export$fee870b40919a015","$1f199959333bdd6e$export$943b32f4ced423cc","stationg","Object","values","push","$1f199959333bdd6e$export$4c9091900c113b1f","ready","$1f199959333bdd6e$export$7b266963697d63c4","$1f199959333bdd6e$export$3c906e535efad0e4","Array","fill","_head","_tail","pop","head"],"version":3,"file":"index.fdc84ff7.js.map"}